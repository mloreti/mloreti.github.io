{"version":3,"sources":["index.js"],"names":["Line","_ref","vertices","color","_useState","useState","Math","random","ratio","Object","_Users_mloreti_Documents_projects_portfolio_mloreti_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState3","max","width","material","useRef","speed","useFrame","current","uniforms","dashOffset","value","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","attach","map","v","_Users_mloreti_Documents_projects_portfolio_mloreti_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_0__","THREE","_Users_mloreti_Documents_projects_portfolio_mloreti_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","ref","transparent","depthTest","lineWidth","dashArray","dashRatio","Lines","_useThree$viewport","useThree","viewport","height","colors","gutter","position","Array","fill","_","startY","points","vertice","parseInt","length","Info","className","href","extend","meshline","rootElement","document","getElementById","ReactDOM","render","Fragment","react_three_fiber__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"0NAUA,SAASA,EAATC,GAAmC,IAAnBC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,MAASC,EACjBC,mBAAS,iBAAM,IAAO,GAAMC,KAAKC,WAA1CC,EAD0BC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,MAAAO,EAEjBN,mBAAS,kBAAMC,KAAKM,IAAI,IAAM,IAAON,KAAKC,YAAnDM,EAF0BJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,MAG3BG,EAAWC,mBACXC,EAAQV,KAAKM,IAAI,KAAQ,KAASN,KAAKC,UAI7C,OAFAU,YAAS,kBAAOH,EAASI,QAAQC,SAASC,WAAWC,OAASL,IAG5DM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,YACEC,OAAO,WACPvB,SAAUA,EAASwB,IAAI,SAAAC,GAAC,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAQoB,UAARpB,OAAAqB,EAAA,EAAArB,CAAyBkB,QAEnDL,EAAAC,EAAAC,cAAA,oBACEO,IAAKjB,EACLW,OAAO,WACPO,aAAW,EACXC,WAAW,EACXC,UAAWrB,EACXV,MAAOA,EACPgC,UAAmB,GAAR3B,EACX4B,UAAW5B,KAMnB,SAAS6B,IAAQ,IAAAC,EAGXC,cADFC,SAAYC,EAFCH,EAEDG,OAAQ5B,EAFPyB,EAEOzB,MAGhB6B,EAAS,CACb,UACA,UACA,UACA,UACA,YACA,aAIIC,EAAS9B,EADO,GAElB+B,GAAY/B,EAAQ,EAAI8B,EAAS,EAcrC,OAZiB,IAAIE,MAJC,IAIoBC,KAAK,IAAIpB,IAAI,SAAAqB,GACrD,IAAMC,EAAS1C,KAAKC,SACd0C,EAAS,CACb,CAACL,GAAWH,EAAQO,GACpB,CAACJ,EAAUH,EAAQO,IAKrB,OAFAJ,GAAYD,EAELM,IAGOvB,IAAI,SAAAwB,GAAO,OACzB5B,EAAAC,EAAAC,cAACxB,EAAD,CACEE,SAAUgD,EACV/C,MAAOuC,EAAOS,SAAST,EAAOU,OAAS9C,KAAKC,eAKlD,SAAS8C,IACP,OACE/B,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,QACbhC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG+B,KAAK,8BAAR,aA1EVC,YAAOC,GA4FP,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOxC,EAAAC,EAAAC,cAZhB,WACE,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwC,SAAA,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACa,EAAD,OAEFf,EAAAC,EAAAC,cAAC6B,EAAD,QAMU,MAASK","file":"static/js/main.59195338.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Canvas, useThree, extend, useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport * as meshline from \"threejs-meshline\";\n\nimport \"./styles.css\";\n\nextend(meshline);\n\nfunction Line({ vertices, color }) {\n  const [ratio] = useState(() => 0.55 + 0.5 * Math.random());\n  const [width] = useState(() => Math.max(0.01, 0.05 * Math.random()));\n  const material = useRef();\n  const speed = Math.max(0.0001, 0.0005 * Math.random());\n\n  useFrame(() => (material.current.uniforms.dashOffset.value += speed));\n\n  return (\n    <mesh>\n      <meshLine\n        attach=\"geometry\"\n        vertices={vertices.map(v => new THREE.Vector3(...v))}\n      />\n      <meshLineMaterial\n        ref={material}\n        attach=\"material\"\n        transparent\n        depthTest={false}\n        lineWidth={width}\n        color={color}\n        dashArray={ratio * 0.1}\n        dashRatio={ratio}\n      />\n    </mesh>\n  );\n}\n\nfunction Lines() {\n  const {\n    viewport: { height, width }\n  } = useThree();\n\n  const colors = [\n    \"#A2CCB6\",\n    \"#FCEEB5\",\n    \"#EE786E\",\n    \"#e0feff\",\n    \"lightpink\",\n    \"lightblue\"\n  ];\n\n  const numberOfLines = 40;\n  const gutter = width / numberOfLines;\n  let position = -width / 2 + gutter / 2;\n\n  const vertices = new Array(numberOfLines).fill([]).map(_ => {\n    const startY = Math.random();\n    const points = [\n      [position, -height, startY],\n      [position, height, startY]\n    ];\n\n    position += gutter;\n\n    return points;\n  });\n\n  return vertices.map(vertice => (\n    <Line\n      vertices={vertice}\n      color={colors[parseInt(colors.length * Math.random())]}\n    />\n  ));\n}\n\nfunction Info() {\n  return (\n    <div className=\"info\">\n      <h1>Mickey Loreti</h1>\n      <ul>\n        <li>\n          <a href=\"https://github.com/mloreti\">Github</a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <Canvas>\n        <Lines />\n      </Canvas>\n      <Info />\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}